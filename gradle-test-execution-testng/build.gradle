import java.nio.charset.StandardCharsets

/**
 * @author ngoanh2n@gmail.com (Ho Huu Ngoan)
 */

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
    }
}

plugins {
    id 'java'
    id 'idea' // Optional using for IntelliJ IDEA
    id 'eclipse' // Optional using for Eclipse
}

group group
version version

/*
* Define extra properties for the project object - project.ext
*/
ext {
    encoding = StandardCharsets.UTF_8.name()
}

[compileJava, compileTestJava]*.sourceCompatibility = 1.8
[compileJava, compileTestJava]*.targetCompatibility = 1.8
[compileJava, compileTestJava]*.options.collect { options -> options.debug = true }
[compileJava, compileTestJava]*.options.collect { options -> options.encoding = encoding }

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    testImplementation('org.testng:testng:7.1.0')
}

tasks.withType(Test) {
    /*
    * Tell with Gradle that use TestNG framework. Default is JUnit
    */
    useTestNG() {
        /*
        * Preserving order of TestNG tests
        */
        preserveOrder true

        /*
        * Grouping TestNG tests by instances
        */
        groupByInstances = true

        /*
        * To generate reports by TestNG library
        */
        useDefaultListeners = false

        /*
        * Set TestNG output dir
        */
        outputDirectory = file('build/testngOutput')

        //includeGroups 'unitTests'
        //excludeGroups 'integrationTests'
    }

    /*
    * Make failing tests do not fail the task
    */
    ignoreFailures = true

    testLogging {
        /*
        *  Want to display the following test events
        */
        events 'passed', 'skipped', 'failed'

        /*
        * To show standard out and standard error of the test JVM(s) on the console
        */
        showStandardStreams = true
    }

    /*
    * Turn off Gradle's HTML report to avoid replacing the reports generated by TestNG library
    */
    reports.html.enabled = false

    /*
    * If any upToDateWhen spec returns false, the task is considered out of date.
    * If they return true, Gradle does the normal behavior of checking input/output files.
    */
    outputs.upToDateWhen { false }

    /*
    * When the JVM starts, it uses the JVMs platform encoding
    */
    systemProperty('file.encoding', encoding)

    /*
    * Set BUILD_URL to JVM
    */
    systemProperty('BUILD_URL', System.getenv()['BUILD_URL'])

    /*
    * To make the Gradle JVM system properties available to tests
    */
    systemProperties = System.getProperties() as Map<String, ?>
}