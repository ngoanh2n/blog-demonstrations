import java.nio.charset.StandardCharsets

/**
 * @author ngoanh2n@gmail.com (Ho Huu Ngoan)
 */
group group
version version

apply plugin: 'java'
apply plugin: 'idea'    // Optional using for IntelliJ IDEA
apply plugin: 'eclipse' // Optional using for Eclipse
apply plugin: 'io.qameta.allure'

/*
* Define extra properties for the project object - project.ext
*/
ext {
    encoding = StandardCharsets.UTF_8.name()
}

[compileJava, compileTestJava]*.sourceCompatibility = 1.8
[compileJava, compileTestJava]*.targetCompatibility = 1.8
[compileJava, compileTestJava]*.options.collect { options -> options.debug = true }
[compileJava, compileTestJava]*.options.collect { options -> options.encoding = encoding }

repositories {
    jcenter()
    mavenCentral()
    maven {
        url "https://plugins.gradle.org/m2/"
    }
}

dependencies {
    implementation('org.testng:testng:7.1.0')
    implementation('io.qameta.allure:allure-testng:2.13.1')
}

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:2.8.1"
    }
}

tasks.withType(Test).all { testTask ->
    testTask.systemProperties = [
            'file.encoding': encoding,
            'BUILD_URL'    : System.getenv()['BUILD_URL']
    ]
    testTask.testLogging.showStandardStreams = true
    testTask.outputs.upToDateWhen { false }
}

/*
* Allure Configuration
*/
allure {
    version = '2.13.1'
    aspectjweaver = true
    autoconfigure = false
    aspectjVersion = '1.9.1'
    useTestNG { version = '2.13.1' }
}

tasks.withType(Test) {
    /*
    * Tell with Gradle that use TestNG framework
    */
    useTestNG() {
        /*
        * Preserving order of TestNG tests
        */
        preserveOrder true

        /*
        * Grouping TestNG tests by instances
        */
        groupByInstances = true

        /*
        * To generate reports by TestNG library
        */
        useDefaultListeners = true

        /*
        * Set TestNG output dir
        */
        //outputDirectory = file('build/testngOutput')

        //includeGroups 'unitTests'
        //excludeGroups 'integrationTests'
    }

    /*
    * Make failing tests do not fail the task
    */
    ignoreFailures = false

    /*
    * Turn off Gradle's HTML report to avoid replacing the reports generated by TestNG library
    */
    reports.html.enabled = true

    /*
    * To show standard out and standard error of the test JVM(s) on the console
    */
    testLogging.showStandardStreams = true

    /*
    *  Want to display the following test events
    */
    testLogging { events 'passed', 'skipped', 'failed' }

    /*
    * To make the Gradle JVM system properties available to tests
    */
    systemProperties = System.getProperties() as Map<String, ?>
}